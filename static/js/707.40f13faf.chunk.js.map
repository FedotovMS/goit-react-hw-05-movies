{"version":3,"file":"static/js/707.40f13faf.chunk.js","mappings":"uQAGMA,EAAiB,mCAAG,WAAMC,GAAN,uGACDC,EAAAA,EAAAA,IAAA,6CACiBD,EADjB,mBAErBE,EAAAA,GAHsB,cAClBC,EADkB,SAMtBA,EAASC,KADHC,EALgB,EAKhBA,GAAIC,EALY,EAKZA,MAAOC,EALK,EAKLA,OAAQC,EALH,EAKGA,WAAYC,EALf,EAKeA,YAAaC,EAL5B,EAK4BA,SAG9CC,EAAY,CAChBN,GAAAA,EACAC,MAAAA,EACAC,OAAAA,EACAC,WAAAA,EACAC,YAAAA,EACAC,SAAAA,GAdsB,kBAiBjBC,GAjBiB,2CAAH,sDAoBvB,I,SCiDA,EApEqB,WAAO,IAAD,EACjBX,GAAYY,EAAAA,EAAAA,MAAZZ,QACFa,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,SAAO,UAAAH,EAASI,aAAT,eAAgBC,OAAQ,KAEhD,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,oGAEpBF,GAAa,GAFO,SAGIxB,EAAkBC,GAHtB,OAGdW,EAHc,OAIpBU,EAASV,GACTY,GAAa,GALO,gDAOpBG,QAAQC,MAAR,MAPoB,yDAAH,qDAWrBF,GACD,GAAE,CAACzB,KAGF,4BACE,SAAC,KAAD,CAAM4B,GAAIb,EAASc,QAAnB,SAA4B,SAC3BP,GACC,uBAAG,gBAEH,8BACGF,IACC,iCACE,wBAAKA,EAAMd,SACX,gBACEwB,IAAG,0CAAqCV,EAAMX,aAC9CsB,IAAKX,EAAMd,SAGb,wBAAI,iBACJ,uBAAIc,EAAMZ,cACV,wBAAI,aACJ,uBACGY,EAAMb,OAAOyB,KAAI,SAAAC,GAAK,OACrB,wBAAoBA,EAAMC,MAAjBD,EAAM5B,GADM,OAIzB,wBAAI,eACJ,uBAAIe,EAAMV,YACV,wBAAI,uBACJ,2BACE,yBACE,SAAC,KAAD,CAAMkB,GAAG,UAAT,SAAmB,cAErB,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,SAAmB,kBAGvB,SAAC,EAAAO,SAAD,WACE,SAAC,KAAD,aAQf,C,oBC9DD,IARgB,CAEdC,QAAS,CACPC,OAAQ,mBACRC,cACE,8N","sources":["services/MovieDetail-api.js","pages/MovieDetails.jsx","services/ApiOptions.js"],"sourcesContent":["import axios from 'axios';\nimport options from './ApiOptions';\n\nconst FetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?language=en-US`,\n    options\n  );\n  const { id, title, genres, popularity, poster_path, overview } =\n    response.data;\n\n  const movieData = {\n    id,\n    title,\n    genres,\n    popularity,\n    poster_path,\n    overview,\n  };\n\n  return movieData;\n};\n\nexport default FetchMovieDetails;\n","import { Suspense, useEffect, useState, useRef } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport FetchMovieDetails from 'services/MovieDetail-api';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLink = useRef(location.state?.from || '/');\n\n  const [movie, setMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const getMovieDetails = async () => {\n      try {\n        setIsLoading(true);\n        const movieData = await FetchMovieDetails(movieId);\n        setMovie(movieData);\n        setIsLoading(false);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    getMovieDetails();\n  }, [movieId]);\n\n  return (\n    <div>\n      <Link to={backLink.current}>Back</Link>\n      {isLoading ? (\n        <p>Loading...</p>\n      ) : (\n        <>\n          {movie && (\n            <>\n              <h2>{movie.title}</h2>\n              <img\n                src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n                alt={movie.title}\n              />\n\n              <h3>Popularity:</h3>\n              <p>{movie.popularity}</p>\n              <h3>Genres:</h3>\n              <p>\n                {movie.genres.map(genre => (\n                  <li key={genre.id}>{genre.name}</li>\n                ))}\n              </p>\n              <h3>Overview:</h3>\n              <p>{movie.overview}</p>\n              <h4>More information:</h4>\n              <ul>\n                <li>\n                  <Link to=\"credits\">Credit</Link>\n                </li>\n                <li>\n                  <Link to=\"reviews\">Reviews</Link>\n                </li>\n              </ul>\n              <Suspense>\n                <Outlet />\n              </Suspense>\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","const options = {\n  // method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5NGNjZGMwZDdmMmQ4NzRkZmUwYjgyMTgzZTE4ZTMyOSIsInN1YiI6IjY0NjVmZDdlYTUwNDZlMDBlNWI1MDBjOSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.uQwgCh7Dwgcvue4ZCmBq70fD9FuC0cja1l53oOovpSo',\n  },\n};\nexport default options;\n"],"names":["FetchMovieDetails","movieId","axios","options","response","data","id","title","genres","popularity","poster_path","overview","movieData","useParams","location","useLocation","backLink","useRef","state","from","useState","movie","setMovie","isLoading","setIsLoading","useEffect","getMovieDetails","console","error","to","current","src","alt","map","genre","name","Suspense","headers","accept","Authorization"],"sourceRoot":""}