{"version":3,"file":"static/js/45.3b74b477.chunk.js","mappings":"qQAKMA,EAAe,mCAAG,sGACCC,EAAAA,EAAAA,IAAA,oDAHV,MAGU,mBAErBC,EAAAA,GAHoB,cAChBC,EADgB,OAMhBC,EAASD,EAASE,KAAKC,QAAQC,KAAI,YACvC,MAAO,CACLC,GAF8D,EAAtBA,GAGxCC,KAH8D,EAAlBA,KAI5CC,MAJ8D,EAAZA,MAMrD,IAZqB,kBAaf,CAAEN,OAAAA,IAba,2CAAH,qDAgBrB,I,SCgCA,EAjDa,WACX,OAA4BO,EAAAA,EAAAA,UAAS,IAArC,eAAOP,EAAP,KAAeQ,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,MAwBjB,OAtBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,wGAEtBJ,GAAa,GAFS,SAGGd,IAHH,gBAGdI,EAHc,EAGdA,OACFe,EAAkBf,EAAOG,KAAI,SAAAa,GACjC,IAAMV,EAAQU,EAAMV,OAASU,EAAMX,KACnC,MAAO,CACLD,GAAIY,EAAMZ,GACVE,MAAAA,EAEH,IACDE,EAAUO,GACVL,GAAa,GAZS,kDActBO,QAAQC,MAAR,MAdsB,0DAAH,qDAkBvBJ,GACD,GAAE,KAGD,4BACE,wBAAI,oBACHL,GACC,uBAAG,gBAEH,wBACGT,EAAOG,KAAI,SAAAa,GAAK,OACf,SAAC,KAAD,CAEEG,GAAE,kBAAaH,EAAMZ,IACrBgB,MAAO,CAAEC,KAAMV,GAHjB,UAKE,wBAAKK,EAAMV,SAJNU,EAAMZ,GAFE,QAa1B,C,oBC3CD,IARgB,CAEdkB,QAAS,CACPC,OAAQ,mBACRC,cACE,8N","sources":["services/MoviesList-api.js","pages/Home.jsx","services/ApiOptions.js"],"sourcesContent":["import axios from 'axios';\nimport options from './ApiOptions';\n\nconst period = 'day';\n\nconst FetchMoviesList = async () => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/trending/all/${period}?language=en-US`,\n    options\n  );\n\n  const movies = response.data.results.map(({ id, name, title }) => {\n    return {\n      id,\n      name,\n      title,\n    };\n  });\n  return { movies };\n};\n\nexport default FetchMoviesList;\n","import { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport FetchMoviesList from 'services/MoviesList-api';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    const getTrendingMovies = async () => {\n      try {\n        setIsLoading(true);\n        const { movies } = await FetchMoviesList();\n        const formattedMovies = movies.map(movie => {\n          const title = movie.title || movie.name;\n          return {\n            id: movie.id,\n            title,\n          };\n        });\n        setMovies(formattedMovies);\n        setIsLoading(false);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    getTrendingMovies();\n  }, []);\n\n  return (\n    <div>\n      <h1>Trending movies</h1>\n      {isLoading ? (\n        <p>Loading...</p>\n      ) : (\n        <ul>\n          {movies.map(movie => (\n            <Link\n              key={movie.id}\n              to={`/movies/${movie.id}`}\n              state={{ from: location }}\n            >\n              <li>{movie.title}</li>\n            </Link>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n","const options = {\n  // method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5NGNjZGMwZDdmMmQ4NzRkZmUwYjgyMTgzZTE4ZTMyOSIsInN1YiI6IjY0NjVmZDdlYTUwNDZlMDBlNWI1MDBjOSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.uQwgCh7Dwgcvue4ZCmBq70fD9FuC0cja1l53oOovpSo',\n  },\n};\nexport default options;\n"],"names":["FetchMoviesList","axios","options","response","movies","data","results","map","id","name","title","useState","setMovies","isLoading","setIsLoading","location","useLocation","useEffect","getTrendingMovies","formattedMovies","movie","console","error","to","state","from","headers","accept","Authorization"],"sourceRoot":""}