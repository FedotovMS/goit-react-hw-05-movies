{"version":3,"file":"static/js/21.6be697a5.chunk.js","mappings":"6PAGMA,EAAW,mCAAG,WAAMC,GAAN,uFACKC,EAAAA,EAAAA,IAAA,0DAC8BD,EAD9B,8CAErBE,EAAAA,GAHgB,cACZC,EADY,yBAKXA,EAASC,MALE,2CAAH,sDAOjB,I,0BC+CA,EArDqB,WAAO,IAAD,EACzB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMV,EAAK,UAAGM,EAAaK,IAAI,gBAApB,QAAgC,GACrCC,GAAWC,EAAAA,EAAAA,MAoBjB,OANAC,EAAAA,EAAAA,YAAU,WACRf,EAAYC,GAAOe,MAAK,SAAAZ,GACtBO,GAAU,OAAIP,EAASa,SACxB,GACF,GAAE,CAAChB,KAGF,4BACE,kBAAMiB,UAAU,aAAaC,SAfR,SAAAC,GACvBA,EAAEC,iBACFrB,EAAYC,GAAOe,MAAK,SAAAZ,GACtBO,GAAU,OAAIP,EAASa,SACxB,GACF,EAUG,WACE,mBAAQK,KAAK,SAASJ,UAAU,mBAAhC,UACE,iBAAMA,UAAU,wBAAhB,SAAwC,cAG1C,kBACEA,UAAU,kBACVI,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,MAAOzB,EACP0B,SAAU,SAAAP,GAAC,OAhCC,SAAAnB,GAElBO,EAD6B,KAAVP,EAAe,CAAEA,MAAAA,GAAU,CAAC,EAEhD,CA6BsB2B,CAAYR,EAAES,OAAOH,MAAMI,cAA/B,QAIf,wBACGpB,EAAOqB,KAAI,SAAAC,GAAK,OACf,SAAC,KAAD,CAAqBC,GAAE,UAAKD,EAAME,IAAMC,MAAO,CAAEC,KAAMvB,GAAvD,UACE,wBAAKmB,EAAMK,SADFL,EAAME,GADF,QAQxB,C,oBC/CD,IARgB,CAEdI,QAAS,CACPC,OAAQ,mBACRC,cACE,8N","sources":["services/Search-api.js","pages/Movies.jsx","services/ApiOptions.js"],"sourcesContent":["import axios from 'axios';\nimport options from './ApiOptions';\n\nconst FetchSearch = async query => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&language=en-US&page=1`,\n    options\n  );\n  return response.data;\n};\nexport default FetchSearch;\n","import React, { useEffect, useState } from 'react';\nimport FetchSearch from 'services/Search-api';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n\nconst MoviesSearch = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const query = searchParams.get('query') ?? '';\n  const location = useLocation();\n\n  const updateQuery = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    FetchSearch(query).then(response => {\n      setMovies([...response.results]);\n    });\n  };\n\n  useEffect(() => {\n    FetchSearch(query).then(response => {\n      setMovies([...response.results]);\n    });\n  }, [query]);\n\n  return (\n    <div>\n      <form className=\"searchForm\" onSubmit={handleFormSubmit}>\n        <button type=\"submit\" className=\"searchFormButton\">\n          <span className=\"searchFormButtonLabel\">Search</span>\n        </button>\n\n        <input\n          className=\"searchFormInput\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          value={query}\n          onChange={e => updateQuery(e.target.value.toLowerCase())}\n        />\n      </form>\n\n      <ul>\n        {movies.map(movie => (\n          <Link key={movie.id} to={`${movie.id}`} state={{ from: location }}>\n            <li>{movie.title}</li>\n          </Link>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default MoviesSearch;\n","const options = {\n  // method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5NGNjZGMwZDdmMmQ4NzRkZmUwYjgyMTgzZTE4ZTMyOSIsInN1YiI6IjY0NjVmZDdlYTUwNDZlMDBlNWI1MDBjOSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.uQwgCh7Dwgcvue4ZCmBq70fD9FuC0cja1l53oOovpSo',\n  },\n};\nexport default options;\n"],"names":["FetchSearch","query","axios","options","response","data","useSearchParams","searchParams","setSearchParams","useState","movies","setMovies","get","location","useLocation","useEffect","then","results","className","onSubmit","e","preventDefault","type","autoComplete","autoFocus","placeholder","value","onChange","updateQuery","target","toLowerCase","map","movie","to","id","state","from","title","headers","accept","Authorization"],"sourceRoot":""}